--Funções geográficas 

#1. Ache o dataset “austin_crime” no conjunto de dados públicos do BigQuery. Pegue 10 incidentes aleatórios com latitude e longitude não nulas. Crie os pontos geográficos. Vá até o Google Maps e selecione uma coordenada qualquer na cidade de Austin, EUA (pesquise como fazer) e calcule a distância (em km) entre cada ponto desses incidentes à coordenada escolhida. Crie também as rotas de cada incidente à coordenada.

SELECT  
  latitude,
  longitude,
  st_geogpoint(longitude,latitude) as ponto_geografico,
  -- coordenadas geograficas do capitolio do estado do texas:
  st_geogpoint(-97.7429254, 30.2746652) as ponto_geografico_capitolio, 
  -- calculando a distância dos incidentes até o ponto do capitolio no estado do texas:
  round(
    (st_distance
      (st_geogpoint(longitude,latitude), 
      st_geogpoint(-97.7431, 30.2672)
    )/1000), 0
  ) as distancia_km_capitolio, 
  st_makeline(
    (st_geogpoint(longitude,latitude)), 
    (st_geogpoint(-97.7404, 30.2746))
  ) as rota
FROM `bigquery-public-data.austin_crime.crime` 
WHERE latitude is not null and longitude is not null
ORDER BY RAND()
LIMIT 10;

#2. Calcule a mínima e a máxima distância do resultado da query acima
SELECT  
-- calculando a maxima distância dos incidentes até o ponto do capitolio no estado do texas:
max(
  round(
    (st_distance
      (st_geogpoint(longitude,latitude), 
      st_geogpoint(-97.7431, 30.2672)
    )/1000), 0
  )
) as distancia_max_km_capitolio, 
-- calculando a maxima distância dos incidentes até o ponto do capitolio no estado do texas:
min(
  round(
    (st_distance
      (st_geogpoint(longitude,latitude), 
      st_geogpoint(-97.7431, 30.2672)
    )/1000), 0
  )
) as distancia_min_km_capitolio
FROM `bigquery-public-data.austin_crime.crime` 
WHERE latitude is not null and longitude is not null